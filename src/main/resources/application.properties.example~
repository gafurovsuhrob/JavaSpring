# ===============================
# Основные настройки сервера
# ===============================
# Render и другие платформы подставляют порт в переменную окружения PORT
server.port=${PORT:8080}
server.address=0.0.0.0

# ===============================
# Настройки БД (PostgreSQL)
# ===============================
# В проде / на Render зададим переменные окружения:
#   DATABASE_URL  -> jdbc:postgresql://<host>:<port>/<dbname>
#   DATABASE_USERNAME
#   DATABASE_PASSWORD
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/egov}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# Логирование
# ===============================
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# ===============================
# CORS (разрешаем все пока для теста)
# ===============================
spring.web.cors.allowed-origin-patterns=*
spring.web.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
